
using System;
using System.Data;

public class clsApplications
{
        public enum enApplicationsMode {AddNew = 0, Update = 1};
        private enApplicationsMode _Mode;
                                        
        public  ApplicationID { get; set; }
	public  ApplicantPersonID { get; set; }
	public  ApplicationDate { get; set; }
	public  ApplicationTypeID { get; set; }
	public  ApplicationStatus { get; set; }
	public  LastStatusDate { get; set; }
	public  PaidFees { get; set; }
	public  CreatedByUserID { get; set; }
	
        
        public clsApplications()
        {
                            
            this.ApplicationID = -1; 
	    this.ApplicantPersonID = -1; 
	    this.ApplicationDate = DateTime.Now; 
	    this.ApplicationTypeID = -1; 
	    this.ApplicationStatus = 0; 
	    this.LastStatusDate = DateTime.Now; 
	    this.PaidFees = 0; 
	    this.CreatedByUserID = -1; 
	    

            _Mode = enApplicationsMode.AddNew;
        }
        
        
        private clsApplications( int ApplicationID,  int ApplicantPersonID,  DateTime ApplicationDate,  int ApplicationTypeID,  byte ApplicationStatus,  DateTime LastStatusDate,  decimal PaidFees,  int CreatedByUserID)
        {
            this.ApplicationID = ApplicationID; 
	    this.ApplicantPersonID = ApplicantPersonID; 
	    this.ApplicationDate = ApplicationDate; 
	    this.ApplicationTypeID = ApplicationTypeID; 
	    this.ApplicationStatus = ApplicationStatus; 
	    this.LastStatusDate = LastStatusDate; 
	    this.PaidFees = PaidFees; 
	    this.CreatedByUserID = CreatedByUserID; 
	    
            _Mode = enApplicationsMode.Update;
        }
        
        
        
        public static clsApplications GetApplicationsInfoByApplicationID(int ApplicationID)
        {
            
             int ApplicantPersonID = -1; 
	     DateTime ApplicationDate = DateTime.Now; 
	     int ApplicationTypeID = -1; 
	     byte ApplicationStatus = 0; 
	     DateTime LastStatusDate = DateTime.Now; 
	     decimal PaidFees = 0; 
	     int CreatedByUserID = -1; 
	    

            bool IsFound = clsApplicationsData.GetApplicationsInfoApplicationID(ApplicationID, ref  ApplicantPersonID, ref  ApplicationDate, ref  ApplicationTypeID, ref  ApplicationStatus, ref  LastStatusDate, ref  PaidFees, ref  CreatedByUserID);

            if (IsFound)
            {
                return new clsApplications( ApplicationID,  ApplicantPersonID,  ApplicationDate,  ApplicationTypeID,  ApplicationStatus,  LastStatusDate,  PaidFees,  CreatedByUserID);
            }
            else
            {
                return null;
            }
        }
        
        
        
        public static bool IsApplicationsExistByApplicationID(int ApplicationID)
        {
            return clsApplicationsData.IsApplicationsExistByApplicationID(ApplicationID);
        }
        
            
        
            private bool _UpdateApplications()
            {
                return clsApplicationsData.UpdateApplications(this. ApplicationID, this. ApplicantPersonID, this. ApplicationDate, this. ApplicationTypeID, this. ApplicationStatus, this. LastStatusDate, this. PaidFees, this. CreatedByUserID);
            }
            
        
        public static DataTable GetAllApplications()
        {
            return clsApplicationsData.GetAllApplications();
        }
        
        
        public bool Save()
        {
            switch (_Mode)
            {
                case enApplicationsMode.AddNew:

                    if (_AddNewApplications())
                    {
                        _Mode = enApplicationsMode.Update;
                        return true;
                    }
                    else
                    {
                        return false;
                    }


                case enApplicationsMode.Update:

                    return _UpdateApplications();
            }

            return false;
        }
        
}
                